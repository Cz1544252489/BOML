dist: xenial
language: python
jobs:
    include:
        - name: "PyBML test on Xenial Linux with Python 3.7"
          python: 3.7
install: 
    - pip3 install -r requirements.txt
    - pip install coverage
script: 
    - cd test_script
    # - python3 test_meta_init.py
    - coverage run -p test_setup_model.py
    - coverage run  -p test_meta_init.py --mode=train --dataset=omniglot --classes=5 --examples_train=1 --examples_test=15 --meta_batch_size=1 --n_meta_iterations=200 --T=1 --meta-lr=0.001 --lr=0.1 --method=MetaInit --inner_method=Simple --outer_method=Simple --learn_lr=True --logdir=../tmp/ --clip_value=10.0 --first_order=True --print-interval=100 --save_interval=100 --use_T=True --Notes=toolkit_TNet
    - coverage run  -p test_meta_init.py --mode=test --dataset=omniglot --classes=5 --examples_train=1 --examples_test=15 --meta_batch_size=1 --n_meta_iterations=200 --T=1 --meta-lr=0.001 --lr=0.1 --method=MetaInit --inner_method=Simple --outer_method=Simple --logdir=../tmp/ --expdir=../tmp/  --clip_value=10.0 --iterations_to_test=100 --print-interval=100 --save_interval=100 --use_T=True --Notes=toolkit_TNet
    - coverage run  -p test_meta_init.py --mode=train --dataset=omniglot --classes=5 --examples_train=1 --examples_test=15 --meta_batch_size=1 --n_meta_iterations=100 --T=2 --meta-lr=0.001 --lr=0.1 --method=MetaInit --inner_method=Simple --outer_method=Simple --logdir=../tmp/ --expdir=../tmp/  --print-interval=100 --first_order=True --save_interval=100 --use_Warp=True --Notes=toolkit_warp
    - coverage run -p test_meta_repr.py  --mode=train --dataset=omniglot --classes=5 --examples_train=1 --examples_test=15 --meta_batch_size=1 --n_meta_iterations=100 --T=2 --meta-lr=0.001 --lr=0.1 --method=MetaRepr --inner_method=Trad --outer_method=Reverse --inner_opt=Adam --outer_opt=Adam  --clip_value=10.0 --logdir=../tmp/ --print-interval=100 --truncate_iter=1 --save_interval=100 --Notes=toolkit_test_TRHG
    - coverage run -p test_meta_repr.py  --mode=test --dataset=omniglot --classes=5 --examples_train=1 --examples_test=15 --meta_batch_size=1 --n_meta_iterations=100 --T=2 --meta-lr=0.001 --lr=0.1 --method=MetaRepr --inner_method=Trad --outer_method=Reverse --inner_opt=Adam --outer_opt=Adam  --clip_value=10.0 --logdir=../tmp/ --expdir=../tmp/ --print-interval=100 --truncate_iter=1 --save_interval=100 --Notes=toolkit_test_TRHG
    - coverage run -p test_meta_repr.py  --mode=train --dataset=omniglot --classes=5 --examples_train=1 --examples_test=15 --meta_batch_size=1 --n_meta_iterations=100 --T=1 --meta-lr=0.001 --lr=0.1 --method=MetaRepr --inner_method=Aggr --learn_alpha_itr=True --learn_st=True --outer_method=Reverse --inner_opt=Momentum --outer_opt=Adam --logdir=../tmp/ --alpha=0.7 --print-interval=100 --save_interval=100 --Notes=toolkit_test_BDA
    - coverage run -p test_meta_repr.py  --mode=train --dataset=omniglot --classes=5 --examples_train=1 --examples_test=15 --meta_batch_size=1 --n_meta_iterations=100 --T=1 --meta-lr=0.001 --lr=0.1 --method=MetaRepr --inner_method=Aggr --outer_method=Darts --alpha=0.7 --logdir=../tmp/ --print-interval=100 --save_interval=100 --Notes=toolkit_test_DARTS
    - coverage run -p test_meta_repr.py  --mode=train --dataset=omniglot --classes=5 --examples_train=1 --examples_test=15 --meta_batch_size=1 --n_meta_iterations=100 --T=1 --meta-lr=0.001 --lr=0.1 --method=MetaRepr --inner_method=Trad --outer_method=Implicit --inner_opt=SGD --outer_opt=Adam --logdir=../tmp/ --print-interval=100 --save_interval=100 --Notes=toolkit_test_Implicit
    - coverage combine

after_success:
  - bash <(curl -s https://codecov.io/bash)
